{"ast":null,"code":"var _jsxFileName = \"/home/colton/projects/movieapi/src/pages/Movie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { MovieContext } from '../movieContextProvider';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Movie() {\n  _s();\n\n  let params = useParams();\n  let movie_id = useParams();\n  let {\n    id\n  } = useParams();\n  let newId = id.slice(1);\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/movie/${newId}?api_key=${process.env.REACT_APP_MOVIEDB}&region=US`).then(res => {\n      if (res.data.id !== movie.id) {\n        setMovie(res.data);\n      }\n    }).catch(err => console.log(err));\n  }, [newId]); // console.log(\"params:\",params)\n\n  console.log(\"newId:\", newId);\n  console.log(\"movie:\", movie); // console.log(\"movie:\",movie)\n  // console.log(\"params:\", params)\n  // console.log(\"movie_id:\", movie_id)\n  // console.log(\"popMovies:\",popMovies)\n  // console.log(\"nowPlaying:\",nowPlaying)\n  // console.log(\"topMovies:\", topMovies)\n  // console.log(\"searchMovies:\", searchMovies)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Movie-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n        width: \"300px\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\" Realse Date: \", movie.release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: movie.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: `Budget: $ ${movie.budget}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: `Revenue: $ ${movie.revenue}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `${movie.homepage}`,\n        children: movie.homepage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Movie, \"PS7jnUbYQ7DosO9LaFo5IX+vgOw=\", false, function () {\n  return [useParams, useParams, useParams];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/home/colton/projects/movieapi/src/pages/Movie.js"],"names":["React","useContext","useEffect","useState","MovieContext","useParams","axios","Movie","params","movie_id","id","newId","slice","movie","setMovie","get","process","env","REACT_APP_MOVIEDB","then","res","data","catch","err","console","log","poster_path","title","release_date","overview","budget","revenue","homepage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAGA,SAASC,KAAT,GAAiB;AAAA;;AACf,MAAIC,MAAM,GAAGH,SAAS,EAAtB;AACA,MAAII,QAAQ,GAAGJ,SAAS,EAAxB;AACA,MAAI;AAACK,IAAAA;AAAD,MAAOL,SAAS,EAApB;AACA,MAAIM,KAAK,GAAGD,EAAE,CAACE,KAAH,CAAS,CAAT,CAAZ;AAKE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AAChBI,IAAAA,KAAK,CAACS,GAAN,CAAW,sCAAqCJ,KAAM,YAAWK,OAAO,CAACC,GAAR,CAAYC,iBAAkB,YAA/F,EACGC,IADH,CACSC,GAAD,IAAS;AACb,UAAGA,GAAG,CAACC,IAAJ,CAASX,EAAT,KAAgBG,KAAK,CAACH,EAAzB,EAA4B;AAC1BI,QAAAA,QAAQ,CAACM,GAAG,CAACC,IAAL,CAAR;AACD;AAAC,KAJN,EAKGC,KALH,CAKSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALhB;AAMC,GAPQ,EAON,CAACZ,KAAD,CAPM,CAAT,CAZa,CAsBb;;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBd,KAAtB;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBZ,KAArB,EAxBa,CAyBf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AACA,QAAA,GAAG,EAAG,kCAAiCA,KAAK,CAACa,WAAY,EADzD;AAEA,QAAA,KAAK,EAAC,OAFN;AAGA,QAAA,GAAG,EAAC;AAHJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,kBAAMb,KAAK,CAACc;AAAZ;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,qCAAmBd,KAAK,CAACe,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA,kBAAIf,KAAK,CAACgB;AAAV;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAA,kBAAM,aAAYhB,KAAK,CAACiB,MAAO;AAA/B;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAA,kBAAM,cAAajB,KAAK,CAACkB,OAAQ;AAAjC;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAG,QAAA,IAAI,EAAG,GAAElB,KAAK,CAACmB,QAAS,EAA3B;AAAA,kBAA+BnB,KAAK,CAACmB;AAArC;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAiBD;;GAlDQzB,K;UACMF,S,EACEA,S,EACJA,S;;;KAHJE,K;AAoDT,eAAeA,KAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {MovieContext} from '../movieContextProvider';\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Movie() {\r\n  let params = useParams();\r\n  let movie_id = useParams();\r\n  let {id} = useParams();\r\n  let newId = id.slice(1)\r\n\r\n\r\n\r\n\r\n    const [movie, setMovie] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n    axios.get(`https://api.themoviedb.org/3/movie/${newId}?api_key=${process.env.REACT_APP_MOVIEDB}&region=US`)\r\n      .then((res) => {\r\n        if(res.data.id !== movie.id){\r\n          setMovie(res.data)\r\n        }})\r\n      .catch(err => console.log(err))\r\n    }, [newId]);\r\n  \r\n\r\n    // console.log(\"params:\",params)\r\n    console.log(\"newId:\", newId)\r\n    console.log(\"movie:\",movie)\r\n  // console.log(\"movie:\",movie)\r\n  // console.log(\"params:\", params)\r\n  // console.log(\"movie_id:\", movie_id)\r\n  // console.log(\"popMovies:\",popMovies)\r\n  // console.log(\"nowPlaying:\",nowPlaying)\r\n  // console.log(\"topMovies:\", topMovies)\r\n  // console.log(\"searchMovies:\", searchMovies)\r\n  \r\n  return (\r\n    <>\r\n    <div className=\"Movie-container\">\r\n        <img \r\n        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n        width=\"300px\"\r\n        alt=\"\"\r\n        />\r\n        <div>{movie.title}</div>\r\n        <h4> Realse Date: {movie.release_date}</h4>\r\n        <p>{movie.overview}</p>\r\n        <h3>{`Budget: $ ${movie.budget}`}</h3>\r\n        <h3>{`Revenue: $ ${movie.revenue}`}</h3>\r\n        <a href={`${movie.homepage}`}>{movie.homepage}</a>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Movie"]},"metadata":{},"sourceType":"module"}