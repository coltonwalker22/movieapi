{"ast":null,"code":"var _jsxFileName = \"/home/colton/projects/movieapi/src/movieContextProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieContext = /*#__PURE__*/React.createContext();\n\nfunction MovieContextProvider(props) {\n  _s();\n\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [topMovies, setTopMovies] = useState([]);\n  const [popMovies, setPopMovies] = useState([]);\n  const [nowPlaying, setNowPlaying] = useState([]); // console.log(process.env)\n\n  function getPopMovies() {\n    return axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_MOVIEDB}&region=US`).then(_ref => {\n      let {\n        data: {\n          results\n        }\n      } = _ref;\n      return setPopMovies(results);\n    }).catch(err => console.log(err));\n  }\n\n  function getNowPlaying() {\n    return axios.get(`https://api.themoviedb.org/3/movie/now_playing?api_key=${process.env.REACT_APP_MOVIEDB}&region=US`).then(_ref2 => {\n      let {\n        data: {\n          results\n        }\n      } = _ref2;\n      return setNowPlaying(results);\n    }).catch(err => console.log(err));\n  }\n\n  function getTopMovies() {\n    return axios.get(`https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.REACT_APP_MOVIEDB}&region=US`).then(_ref3 => {\n      let {\n        data: {\n          results\n        }\n      } = _ref3;\n      return setTopMovies(results);\n    }).catch(err => console.log(err));\n  } // function getSearchedMovies(){\n  //     return axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_MOVIEDB}&region=US&query=Batman`)\n  //     .then( ({data: {results}}) => setSearchMovies(results))\n  //     .catch(err => console.log(err))\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(MovieContext.Provider, {\n    value: {\n      searchMovies,\n      topMovies,\n      popMovies,\n      nowPlaying,\n      setSearchMovies,\n      setTopMovies,\n      setPopMovies,\n      setNowPlaying,\n      getPopMovies,\n      getNowPlaying,\n      getTopMovies //  getSearchedMovies\n\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieContextProvider, \"Z7TSjficjuaF02tXRZwIf4VBjc8=\");\n\n_c = MovieContextProvider;\nexport { MovieContextProvider, MovieContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieContextProvider\");","map":{"version":3,"sources":["/home/colton/projects/movieapi/src/movieContextProvider.js"],"names":["React","useState","axios","MovieContext","createContext","MovieContextProvider","props","searchMovies","setSearchMovies","topMovies","setTopMovies","popMovies","setPopMovies","nowPlaying","setNowPlaying","getPopMovies","get","process","env","REACT_APP_MOVIEDB","then","data","results","catch","err","console","log","getNowPlaying","getTopMovies","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAY,gBAAGH,KAAK,CAACI,aAAN,EAArB;;AAEA,SAASC,oBAAT,CAA8BC,KAA9B,EAAoC;AAAA;;AAEhC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C,CARgC,CAUhC;;AACA,WAASc,YAAT,GAAuB;AACpB,WAAOb,KAAK,CAACc,GAAN,CAAW,sDAAqDC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,YAA9F,EACDC,IADC,CACK;AAAA,UAAC;AAACC,QAAAA,IAAI,EAAE;AAACC,UAAAA;AAAD;AAAP,OAAD;AAAA,aAAuBV,YAAY,CAACU,OAAD,CAAnC;AAAA,KADL,EAEDC,KAFC,CAEKC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFZ,CAAP;AAGF;;AAED,WAASG,aAAT,GAAwB;AACpB,WAAOzB,KAAK,CAACc,GAAN,CAAW,0DAAyDC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,YAAlG,EACNC,IADM,CACA;AAAA,UAAC;AAACC,QAAAA,IAAI,EAAE;AAACC,UAAAA;AAAD;AAAP,OAAD;AAAA,aAAuBR,aAAa,CAACQ,OAAD,CAApC;AAAA,KADA,EAENC,KAFM,CAEAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFP,CAAP;AAIH;;AAED,WAASI,YAAT,GAAuB;AACnB,WAAO1B,KAAK,CAACc,GAAN,CAAW,wDAAuDC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,YAAhG,EACNC,IADM,CACA;AAAA,UAAC;AAACC,QAAAA,IAAI,EAAE;AAACC,UAAAA;AAAD;AAAP,OAAD;AAAA,aAAuBZ,YAAY,CAACY,OAAD,CAAnC;AAAA,KADA,EAENC,KAFM,CAEAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFP,CAAP;AAGH,GA5B+B,CA8BhC;AACA;AACA;AACA;AACA;;;AAEA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAC7BjB,MAAAA,YAD6B;AAE7BE,MAAAA,SAF6B;AAG7BE,MAAAA,SAH6B;AAI7BE,MAAAA,UAJ6B;AAK7BL,MAAAA,eAL6B;AAM7BE,MAAAA,YAN6B;AAO7BE,MAAAA,YAP6B;AAQ7BE,MAAAA,aAR6B;AAS7BC,MAAAA,YAT6B;AAU7BY,MAAAA,aAV6B;AAW7BC,MAAAA,YAX6B,CAY9B;;AAZ8B,KAA9B;AAAA,cAcCtB,KAAK,CAACuB;AAdP;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GAxDQxB,oB;;KAAAA,oB;AA0DT,SAAQA,oBAAR,EAA8BF,YAA9B","sourcesContent":["import React, {useState} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst MovieContext = React.createContext();\r\n\r\nfunction MovieContextProvider(props){\r\n    \r\n    const [searchMovies, setSearchMovies] = useState([]);\r\n\r\n    const [topMovies, setTopMovies] = useState([]);\r\n\r\n    const [popMovies, setPopMovies] = useState([]);\r\n\r\n    const [nowPlaying, setNowPlaying] = useState([]);\r\n\r\n    // console.log(process.env)\r\n    function getPopMovies(){\r\n       return axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_MOVIEDB}&region=US`)\r\n            .then( ({data: {results}}) => setPopMovies(results))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function getNowPlaying(){\r\n        return axios.get(`https://api.themoviedb.org/3/movie/now_playing?api_key=${process.env.REACT_APP_MOVIEDB}&region=US`)\r\n        .then( ({data: {results}}) => setNowPlaying(results))\r\n        .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    function getTopMovies(){\r\n        return axios.get(`https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.REACT_APP_MOVIEDB}&region=US`)\r\n        .then( ({data: {results}}) => setTopMovies(results))\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    // function getSearchedMovies(){\r\n    //     return axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_MOVIEDB}&region=US&query=Batman`)\r\n    //     .then( ({data: {results}}) => setSearchMovies(results))\r\n    //     .catch(err => console.log(err))\r\n    // }\r\n\r\n    return (\r\n        <MovieContext.Provider value={{\r\n         searchMovies,\r\n         topMovies,\r\n         popMovies,\r\n         nowPlaying,\r\n         setSearchMovies,\r\n         setTopMovies,\r\n         setPopMovies,\r\n         setNowPlaying,\r\n         getPopMovies,\r\n         getNowPlaying,\r\n         getTopMovies,\r\n        //  getSearchedMovies\r\n         }}>\r\n        {props.children}\r\n         </MovieContext.Provider>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport {MovieContextProvider, MovieContext}\r\n\r\n"]},"metadata":{},"sourceType":"module"}